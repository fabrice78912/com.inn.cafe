name: CI - Build, Scan, Push and Trigger CD

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [dev, 'rc-*']

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      ECR_REPO: ${{ secrets.ECR_REPO }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      REPO_DEPLOY: ${{ secrets.REPO_DEPLOY }}
      ENV: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'dev' && 'dev' || 'feature' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsECRRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set environment tag
        id: tag
        run: |
          SHA=$(echo ${{ github.sha }} | cut -c1-8)
          BRANCH="${{ github.ref }}"
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            BASE="${{ github.base_ref }}"
            if [[ "$BASE" == "dev" ]]; then
              TAG="feature-${SHA}"
            elif [[ "$BASE" == rc-* ]]; then
              TAG="staging-${SHA}"
            else
              TAG="pr-${SHA}"
            fi
          elif [[ "$BRANCH" == "refs/heads/main" ]]; then
            TAG="prod-${SHA}"
          elif [[ "$BRANCH" == "refs/heads/dev" ]]; then
            TAG="dev-${SHA}"
          else
            TAG="unknown-${SHA}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and Test
        run: mvn clean install -DskipTests=false

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ env.AWS_REGION }}
          registry: ${{ env.ECR_REPO }}

      - name: Test docker login
        run: docker info

      - name: Debug ECR_REPO and Tag
        run: |
          echo "ECR_REPO='${{ env.ECR_REPO }}'"
          echo "TAG='${{ steps.tag.outputs.tag }}'"

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ECR_REPO }}:${{ steps.tag.outputs.tag }} .
          
      - name: List local Docker images
        run: docker images
          

      - name: Push Docker image
        run: |
          docker push ${{ env.ECR_REPO }}:${{ steps.tag.outputs.tag }}

      # Optionnel : dÃ©clencher workflow CD
      - name: Trigger CD
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ env.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ env.REPO_DEPLOY }}
          event-type: deploy
          client-payload: >-
            {
              "branch": "${{ github.ref_name }}",
              "image_tag": "${{ steps.tag.outputs.tag }}",
              "environment": "${{ env.ENV }}",
              "microservice": "microservice-a"
            }
